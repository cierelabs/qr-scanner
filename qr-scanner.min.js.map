{"version":3,"file":"qr-scanner.min.js","sources":["src/qr-scanner.js"],"sourcesContent":["export default class QrScanner {\n    /* async */\n    static hasCamera() {\n        // note that enumerateDevices can always be called and does not prompt the user for permission. However, device\n        // labels are only readable if served via https and an active media stream exists or permanent permission is\n        // given. That doesn't matter for us though as we don't require labels.\n        return navigator.mediaDevices.enumerateDevices()\n            .then(devices => devices.some(device => device.kind === 'videoinput'))\n            .catch(() => false);\n    }\n\n    constructor(video, onDecode, canvasSize = QrScanner.DEFAULT_CANVAS_SIZE, defaultFacingMode = 'environment') {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n        this._onDecode = onDecode;\n        this._active = false;\n        this._paused = false;\n        this._defaultFacingMode = defaultFacingMode;\n\n        this.$canvas.width = canvasSize;\n        this.$canvas.height = canvasSize;\n        this._sourceRect = {\n            x: 0,\n            y: 0,\n            width: canvasSize,\n            height: canvasSize\n        };\n\n        this._onCanPlay = this._onCanPlay.bind(this);\n        this._onPlay = this._onPlay.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n        this.$video.addEventListener('canplay', this._onCanPlay);\n        this.$video.addEventListener('play', this._onPlay);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n\n        this._qrWorker = new Worker(QrScanner.WORKER_PATH);\n    }\n\n    destroy() {\n        this.$video.removeEventListener('canplay', this._onCanPlay);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n\n        this.stop();\n        this._qrWorker.postMessage({\n            type: 'close'\n        });\n    }\n\n    /* async */\n    start() {\n        if (this._active && !this._paused) {\n            return Promise.resolve();\n        }\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n        this._active = true;\n        this._paused = false;\n        if (document.hidden) {\n            // camera will be started as soon as tab is in foreground\n            return Promise.resolve();\n        }\n        clearTimeout(this._offTimeout);\n        this._offTimeout = null;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            this.$video.play();\n            return Promise.resolve();\n        }\n\n        const uniqueFacingModes = {};\n        const facingModes = [];\n        [this._defaultFacingMode, 'environment', 'user', 'left', 'right'].forEach((facingMode) => {\n            if (!uniqueFacingModes[facingMode]) {\n                facingMode.push(facingMode);\n                uniqueFacingModes[facingMode] = true;\n            }\n        });\n\n        let p = Promise.resolve();\n\n        facingModes.forEach((facingMode) => {\n            p = p.then(() => {\n                return this._getCameraStream(facingMode, true).catch(() => {\n                    return;\n                }).then((stream) => {\n                    this.$video.srcObject = stream;\n                    this._setVideoMirror(facingMode);\n                }).catch(() => {\n                    return;\n                });\n            });\n        });\n\n        p = p.catch(e => {\n            this._active = false;\n            throw e;\n        });\n\n        return p;\n    }\n\n    stop() {\n        this.pause();\n        this._active = false;\n    }\n\n    pause() {\n        this._paused = true;\n        if (!this._active) {\n            return;\n        }\n        this.$video.pause();\n        if (this._offTimeout) {\n            return;\n        }\n        this._offTimeout = setTimeout(() => {\n            const track = this.$video.srcObject && this.$video.srcObject.getTracks()[0];\n            if (!track) return;\n            track.stop();\n            this.$video.srcObject = null;\n            this._offTimeout = null;\n        }, 300);\n    }\n\n    /* async */\n    static scanImage(imageOrFileOrUrl, sourceRect=null, worker=null, canvas=null, fixedCanvasSize=false,\n                     alsoTryWithoutSourceRect=false) {\n        let createdNewWorker = false;\n        let promise = new Promise((resolve, reject) => {\n            if (!worker) {\n                worker = new Worker(QrScanner.WORKER_PATH);\n                createdNewWorker = true;\n                worker.postMessage({ type: 'inversionMode', data: 'both' }); // scan inverted color qr codes too\n            }\n            let timeout, onMessage, onError;\n            onMessage = event => {\n                if (event.data.type !== 'qrResult') {\n                    return;\n                }\n                worker.removeEventListener('message', onMessage);\n                worker.removeEventListener('error', onError);\n                clearTimeout(timeout);\n                if (event.data.data !== null) {\n                    resolve(event.data.data);\n                } else {\n                    reject('QR code not found.');\n                }\n            };\n            onError = (e) => {\n                worker.removeEventListener('message', onMessage);\n                worker.removeEventListener('error', onError);\n                clearTimeout(timeout);\n                const errorMessage = !e ? 'Unknown Error' : (e.message || e);\n                reject('Scanner error: ' + errorMessage);\n            };\n            worker.addEventListener('message', onMessage);\n            worker.addEventListener('error', onError);\n            timeout = setTimeout(() => onError('timeout'), 3000);\n            QrScanner._loadImage(imageOrFileOrUrl).then(image => {\n                const imageData = QrScanner._getImageData(image, sourceRect, canvas, fixedCanvasSize);\n                worker.postMessage({\n                    type: 'decode',\n                    data: imageData\n                }, [imageData.data.buffer]);\n            }).catch(onError);\n        });\n\n        if (sourceRect && alsoTryWithoutSourceRect) {\n            promise = promise.catch(() => QrScanner.scanImage(imageOrFileOrUrl, null, worker, canvas, fixedCanvasSize));\n        }\n\n        promise = promise.finally(() => {\n            if (!createdNewWorker) return;\n            worker.postMessage({\n                type: 'close'\n            });\n        });\n\n        return promise;\n    }\n\n    setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n        this._qrWorker.postMessage({\n            type: 'grayscaleWeights',\n            data: { red, green, blue, useIntegerApproximation }\n        });\n    }\n\n    setInversionMode(inversionMode) {\n        this._qrWorker.postMessage({\n            type: 'inversionMode',\n            data: inversionMode\n        });\n    }\n\n    _onCanPlay() {\n        this._updateSourceRect();\n        this.$video.play();\n    }\n\n    _onPlay() {\n        this._updateSourceRect();\n        this._scanFrame();\n    }\n\n    _onVisibilityChange() {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    _updateSourceRect() {\n        const smallestDimension = Math.min(this.$video.videoWidth, this.$video.videoHeight);\n        const sourceRectSize = Math.round(2 / 3 * smallestDimension);\n        this._sourceRect.width = this._sourceRect.height = sourceRectSize;\n        this._sourceRect.x = (this.$video.videoWidth - sourceRectSize) / 2;\n        this._sourceRect.y = (this.$video.videoHeight - sourceRectSize) / 2;\n    }\n\n    _scanFrame() {\n        if (!this._active || this.$video.paused || this.$video.ended) return false;\n        // using requestAnimationFrame to avoid scanning if tab is in background\n        requestAnimationFrame(() => {\n            QrScanner.scanImage(this.$video, this._sourceRect, this._qrWorker, this.$canvas, true)\n                .then(this._onDecode, error => {\n                    if (this._active && error !== 'QR code not found.') {\n                        console.error(error);\n                    }\n                })\n                .then(() => this._scanFrame());\n        });\n    }\n\n    _getCameraStream(facingMode, exact = false) {\n        const constraintsToTry = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n\n        if (facingMode) {\n            if (exact) {\n                facingMode = { exact: facingMode };\n            }\n            constraintsToTry.forEach(constraint => constraint.facingMode = facingMode);\n        }\n        return this._getMatchingCameraStream(constraintsToTry);\n    }\n\n    _getMatchingCameraStream(constraintsToTry) {\n        if (constraintsToTry.length === 0) {\n            return Promise.reject('Camera not found.');\n        }\n        return navigator.mediaDevices.getUserMedia({\n            video: constraintsToTry.shift()\n        }).catch(() => this._getMatchingCameraStream(constraintsToTry));\n    }\n\n    _setVideoMirror(facingMode) {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode==='user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    static _getImageData(image, sourceRect=null, canvas=null, fixedCanvasSize=false) {\n        canvas = canvas || document.createElement('canvas');\n        const sourceRectX = sourceRect && sourceRect.x? sourceRect.x : 0;\n        const sourceRectY = sourceRect && sourceRect.y? sourceRect.y : 0;\n        const sourceRectWidth = sourceRect && sourceRect.width? sourceRect.width : image.width || image.videoWidth;\n        const sourceRectHeight = sourceRect && sourceRect.height? sourceRect.height : image.height || image.videoHeight;\n        if (!fixedCanvasSize && (canvas.width !== sourceRectWidth || canvas.height !== sourceRectHeight)) {\n            canvas.width = sourceRectWidth;\n            canvas.height = sourceRectHeight;\n        }\n        const context = canvas.getContext('2d', { alpha: false });\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(image, sourceRectX, sourceRectY, sourceRectWidth, sourceRectHeight, 0, 0, canvas.width, canvas.height);\n        return context.getImageData(0, 0, canvas.width, canvas.height);\n    }\n\n    /* async */\n    static _loadImage(imageOrFileOrUrl) {\n        if (imageOrFileOrUrl instanceof HTMLCanvasElement || imageOrFileOrUrl instanceof HTMLVideoElement\n            || window.ImageBitmap && imageOrFileOrUrl instanceof window.ImageBitmap\n            || window.OffscreenCanvas && imageOrFileOrUrl instanceof window.OffscreenCanvas) {\n            return Promise.resolve(imageOrFileOrUrl);\n        } else if (imageOrFileOrUrl instanceof Image) {\n            return QrScanner._awaitImageLoad(imageOrFileOrUrl).then(() => imageOrFileOrUrl);\n        } else if (imageOrFileOrUrl instanceof File || imageOrFileOrUrl instanceof URL\n            ||  typeof(imageOrFileOrUrl)==='string') {\n            const image = new Image();\n            if (imageOrFileOrUrl instanceof File) {\n                image.src = URL.createObjectURL(imageOrFileOrUrl);\n            } else {\n                image.src = imageOrFileOrUrl;\n            }\n            return QrScanner._awaitImageLoad(image).then(() => {\n                if (imageOrFileOrUrl instanceof File) {\n                    URL.revokeObjectURL(image.src);\n                }\n                return image;\n            });\n        } else {\n            return Promise.reject('Unsupported image type.');\n        }\n    }\n\n    /* async */\n    static _awaitImageLoad(image) {\n        return new Promise((resolve, reject) => {\n            if (image.complete && image.naturalWidth!==0) {\n                // already loaded\n                resolve();\n            } else {\n                let onLoad, onError;\n                onLoad = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    resolve();\n                };\n                onError = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    reject('Image load error');\n                };\n                image.addEventListener('load', onLoad);\n                image.addEventListener('error', onError);\n            }\n        });\n    }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';\n"],"names":["QrScanner","navigator","mediaDevices","enumerateDevices","then","devices","some","device","kind","catch","video","onDecode","canvasSize","DEFAULT_CANVAS_SIZE","defaultFacingMode","$video","$canvas","document","createElement","_onDecode","_paused","_active","_defaultFacingMode","width","height","_sourceRect","x","y","_onCanPlay","bind","_onPlay","_onVisibilityChange","addEventListener","_qrWorker","Worker","WORKER_PATH","removeEventListener","stop","postMessage","type","Promise","resolve","window","location","protocol","console","warn","hidden","clearTimeout","_offTimeout","srcObject","play","forEach","facingMode","uniqueFacingModes","push","p","_getCameraStream","stream","_setVideoMirror","e","pause","setTimeout","track","imageOrFileOrUrl","sourceRect","worker","canvas","fixedCanvasSize","alsoTryWithoutSourceRect","createdNewWorker","promise","reject","data","timeout","onMessage","onError","event","_loadImage","image","imageData","buffer","scanImage","finally","red","green","blue","useIntegerApproximation","inversionMode","_updateSourceRect","_scanFrame","start","videoHeight","sourceRectSize","videoWidth","paused","ended","requestAnimationFrame","error","exact","min","constraintsToTry","constraint","_getMatchingCameraStream","length","getUserMedia","shift","style","transform","sourceRectWidth","sourceRectHeight","alpha","context","imageSmoothingEnabled","drawImage","sourceRectX","sourceRectY","getImageData","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","URL","src","createObjectURL","revokeObjectURL","complete","naturalWidth","onLoad"],"mappings":"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"}